{"ast":null,"code":"import _slicedToArray from \"/home/juanrodriguez/vue-time-ranges-picker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/juanrodriguez/vue-time-ranges-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/juanrodriguez/vue-time-ranges-picker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { CIRCLE_RADIUS, ONE_HOUR_DEGREE } from './consts';\nimport { getTimeCoordinates, getTimeByDegree } from './helpers';\nimport MovePointer from './MovePointer';\nimport Range from './Range.js';\n\nvar RangesController = /*#__PURE__*/function () {\n  function RangesController(rangesData, stepOfMoving) {\n    var _this = this;\n\n    _classCallCheck(this, RangesController);\n\n    this.stepOfMoving = stepOfMoving;\n    var movePointers = rangesData.map(function (pointerData, index) {\n      var startTime = pointerData.startTime;\n      return new MovePointer({\n        time: startTime,\n        index: index,\n        controller: _this,\n        coordinates: getTimeCoordinates(startTime)\n      });\n    });\n    this.movePointers = movePointers;\n    this.ranges = rangesData.map(function (_ref, index) {\n      var scaleColor = _ref.scaleColor;\n      var startMovePointer = movePointers[index];\n      var endMovePointer = movePointers[index + 1] ? movePointers[index + 1] : movePointers[0];\n      return new Range({\n        startMovePointer: startMovePointer,\n        endMovePointer: endMovePointer,\n        scaleColor: scaleColor\n      });\n    });\n  }\n\n  _createClass(RangesController, [{\n    key: \"setStepOfMoving\",\n    value: function setStepOfMoving(stepValue) {\n      this.stepOfMoving = stepValue;\n    }\n  }, {\n    key: \"setBasicVector\",\n    value: function setBasicVector(center) {\n      var _center = _slicedToArray(center, 2),\n          centerX = _center[0],\n          centerY = _center[1];\n\n      var basicVector = [CIRCLE_RADIUS, 0];\n      var vectorLength = Math.sqrt(Math.pow(basicVector[0], 2) + Math.pow(basicVector[1], 2));\n      this.basicVector = {\n        centerX: centerX,\n        centerY: centerY,\n        zeroAngleX: basicVector[0],\n        zeroAngleY: basicVector[1],\n        vectorLength: vectorLength\n      };\n    }\n  }, {\n    key: \"getPointer\",\n    value: function getPointer(name) {\n      var pointer = this.movePointers.find(function (pointer) {\n        return pointer.name === name;\n      });\n      return pointer;\n    }\n  }, {\n    key: \"getActiveMovePointers\",\n    value: function getActiveMovePointers() {\n      var pointers = this.movePointers.filter(function (pointer) {\n        return pointer.isActive === true;\n      });\n      return pointers;\n    }\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(pointer, degree) {\n      var _this$getNewPointerDa = this.getNewPointerData(degree),\n          coordinates = _this$getNewPointerDa.coordinates,\n          time = _this$getNewPointerDa.time;\n\n      var rangeWithStartPointer = this.ranges.find(function (r) {\n        return r.startMovePointer.name === pointer.name;\n      });\n      var rangeWithEndPointer = this.ranges.find(function (r) {\n        return r.endMovePointer.name === pointer.name;\n      });\n      var isMovingAllowed = this.checkIfMovingAllowed(time, rangeWithEndPointer.startMovePointer.time, rangeWithStartPointer.endMovePointer.time);\n\n      if (!isMovingAllowed) {\n        return;\n      }\n\n      pointer.coordinates = coordinates;\n      pointer.time = time;\n      rangeWithStartPointer.arcs = rangeWithStartPointer.createArcs(pointer, rangeWithStartPointer.endMovePointer);\n      rangeWithEndPointer.arcs = rangeWithEndPointer.createArcs(rangeWithEndPointer.startMovePointer, pointer);\n    }\n  }, {\n    key: \"completeMove\",\n    value: function completeMove() {\n      var pointers = this.getActiveMovePointers();\n      pointers.forEach(function (pointer) {\n        pointer.completeMove();\n      });\n    }\n  }, {\n    key: \"getNewPointerData\",\n    value: function getNewPointerData(degree) {\n      var newDegree;\n      var stepOfMoving = this.stepOfMoving;\n      var stepDegree = ONE_HOUR_DEGREE * stepOfMoving;\n      var halfStepDegree = stepDegree / 2;\n      var remainder = degree % stepDegree;\n      var floor = degree - remainder;\n\n      if (remainder > halfStepDegree) {\n        newDegree = floor + stepDegree;\n      } else {\n        newDegree = floor;\n      }\n\n      var newTime = getTimeByDegree(newDegree);\n      var newCoordinates = getTimeCoordinates(newTime);\n      return {\n        coordinates: newCoordinates,\n        time: newTime\n      };\n    }\n  }, {\n    key: \"checkIfMovingAllowed\",\n    value: function checkIfMovingAllowed(movingTime, backBorderTime, forwardBorderTime) {\n      if (forwardBorderTime >= backBorderTime) {\n        if (movingTime <= backBorderTime || movingTime >= forwardBorderTime) {\n          return false;\n        }\n      } else {\n        if (movingTime >= forwardBorderTime && movingTime <= backBorderTime) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  return RangesController;\n}();\n\nexport default RangesController;","map":{"version":3,"names":["CIRCLE_RADIUS","ONE_HOUR_DEGREE","getTimeCoordinates","getTimeByDegree","MovePointer","Range","RangesController","rangesData","stepOfMoving","movePointers","map","pointerData","index","startTime","time","controller","coordinates","ranges","scaleColor","startMovePointer","endMovePointer","stepValue","center","centerX","centerY","basicVector","vectorLength","Math","sqrt","zeroAngleX","zeroAngleY","name","pointer","find","pointers","filter","isActive","degree","getNewPointerData","rangeWithStartPointer","r","rangeWithEndPointer","isMovingAllowed","checkIfMovingAllowed","arcs","createArcs","getActiveMovePointers","forEach","completeMove","newDegree","stepDegree","halfStepDegree","remainder","floor","newTime","newCoordinates","movingTime","backBorderTime","forwardBorderTime"],"sources":["/home/juanrodriguez/vue-time-ranges-picker/src/core/RangesController.js"],"sourcesContent":["import { CIRCLE_RADIUS, ONE_HOUR_DEGREE } from './consts';\nimport { getTimeCoordinates, getTimeByDegree } from './helpers';\n\nimport MovePointer from './MovePointer';\nimport Range from './Range.js';\n\nclass RangesController {\n  constructor(rangesData, stepOfMoving) {\n    this.stepOfMoving = stepOfMoving;\n\n    const movePointers = rangesData.map((pointerData, index) => {\n      const { startTime } = pointerData;\n      return new MovePointer({\n        time: startTime,\n        index,\n        controller: this,\n        coordinates: getTimeCoordinates(startTime),\n      });\n    });\n    this.movePointers = movePointers;\n\n    this.ranges = rangesData.map(({ scaleColor }, index) => {\n      const startMovePointer = movePointers[index];\n      const endMovePointer = movePointers[index + 1] ? movePointers[index + 1] : movePointers[0];\n      return new Range({\n        startMovePointer,\n        endMovePointer,\n        scaleColor,\n      });\n    });\n  }\n\n  setStepOfMoving(stepValue) {\n    this.stepOfMoving = stepValue;\n  }\n\n  setBasicVector(center) {\n    const [centerX, centerY] = center;\n    const basicVector = [CIRCLE_RADIUS, 0];\n\n    const vectorLength = Math.sqrt(basicVector[0] ** 2 + basicVector[1] ** 2);\n    this.basicVector = {\n      centerX,\n      centerY,\n      zeroAngleX: basicVector[0],\n      zeroAngleY: basicVector[1],\n      vectorLength,\n    };\n  }\n\n  getPointer(name) {\n    const pointer = this.movePointers.find(pointer => {\n      return pointer.name === name;\n    });\n    return pointer;\n  }\n\n  getActiveMovePointers() {\n    const pointers = this.movePointers.filter(pointer => pointer.isActive === true);\n    return pointers;\n  }\n\n  handlePointerMove(pointer, degree) {\n    const { coordinates, time } = this.getNewPointerData(degree);\n    const rangeWithStartPointer = this.ranges.find(r => r.startMovePointer.name === pointer.name);\n    const rangeWithEndPointer = this.ranges.find(r => r.endMovePointer.name === pointer.name);\n\n    const isMovingAllowed = this.checkIfMovingAllowed(\n      time,\n      rangeWithEndPointer.startMovePointer.time,\n      rangeWithStartPointer.endMovePointer.time,\n    );\n    if (!isMovingAllowed) {\n      return;\n    }\n\n    pointer.coordinates = coordinates;\n    pointer.time = time;\n\n    rangeWithStartPointer.arcs = rangeWithStartPointer.createArcs(\n      pointer,\n      rangeWithStartPointer.endMovePointer,\n    );\n    rangeWithEndPointer.arcs = rangeWithEndPointer.createArcs(\n      rangeWithEndPointer.startMovePointer,\n      pointer,\n    );\n  }\n\n  completeMove() {\n    const pointers = this.getActiveMovePointers();\n    pointers.forEach(pointer => {\n      pointer.completeMove();\n    });\n  }\n\n  getNewPointerData(degree) {\n    let newDegree;\n    const { stepOfMoving } = this;\n\n    const stepDegree = ONE_HOUR_DEGREE * stepOfMoving;\n    const halfStepDegree = stepDegree / 2;\n    const remainder = degree % stepDegree;\n    const floor = degree - remainder;\n    if (remainder > halfStepDegree) {\n      newDegree = floor + stepDegree;\n    } else {\n      newDegree = floor;\n    }\n\n    const newTime = getTimeByDegree(newDegree);\n    const newCoordinates = getTimeCoordinates(newTime);\n    return {\n      coordinates: newCoordinates,\n      time: newTime,\n    };\n  }\n\n  checkIfMovingAllowed(movingTime, backBorderTime, forwardBorderTime) {\n    if (forwardBorderTime >= backBorderTime) {\n      if (movingTime <= backBorderTime || movingTime >= forwardBorderTime) {\n        return false;\n      }\n    } else {\n      if (movingTime >= forwardBorderTime && movingTime <= backBorderTime) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nexport default RangesController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}