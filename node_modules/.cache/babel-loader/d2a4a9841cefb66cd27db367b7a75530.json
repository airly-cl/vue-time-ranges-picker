{"ast":null,"code":"import _slicedToArray from \"/home/juanrodriguez/vue-time-ranges-picker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport addZero from 'add-zero';\nimport toTwelve from 'twentyfour-to-twelve';\nimport toTwentyFour from 'twelve-to-twentyfour';\nimport { VIEW_BOX_SIZE, CIRCLE_RADIUS, HOURS_AMOUNT, ONE_HOUR_DEGREE } from './consts';\nexport var timeTextToNumber = function timeTextToNumber(timeText, isTwelfthMode) {\n  var parsedTime = timeText;\n\n  if (isTwelfthMode) {\n    parsedTime = toTwentyFour(timeText);\n  }\n\n  var _parsedTime$split = parsedTime.split(':'),\n      _parsedTime$split2 = _slicedToArray(_parsedTime$split, 2),\n      hours = _parsedTime$split2[0],\n      minutes = _parsedTime$split2[1];\n\n  return parseInt(hours, 10) + parseFloat(minutes / 60, 10);\n};\nexport var timeNumberToText = function timeNumberToText(timeNumber, isTwelfthMode) {\n  var hours = Math.floor(timeNumber);\n  var remainder = timeNumber - hours;\n  var minutes = remainder * 60;\n  var twentyFourText = addZero(hours) + ':' + addZero(minutes);\n\n  if (isTwelfthMode) {\n    return toTwelve(twentyFourText);\n  }\n\n  return twentyFourText;\n};\nexport var getTimeByDegree = function getTimeByDegree(degree) {\n  var time = (degree + 90) / ONE_HOUR_DEGREE;\n\n  if (time >= HOURS_AMOUNT) {\n    time = time - HOURS_AMOUNT;\n  }\n\n  return time;\n};\nexport var getTimeCoordinates = function getTimeCoordinates(time) {\n  var radiusOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // minus 90 because time starts at top of circle\n  var degree = time * ONE_HOUR_DEGREE - 90;\n\n  if (degree <= 0) {\n    degree = 360 + degree;\n  }\n\n  var x = VIEW_BOX_SIZE / 2 + (CIRCLE_RADIUS + radiusOffset) * Math.cos(degree * Math.PI / 180);\n  var y = VIEW_BOX_SIZE / 2 + (CIRCLE_RADIUS + radiusOffset) * Math.sin(degree * Math.PI / 180);\n  return {\n    degree: degree,\n    x: x,\n    y: y\n  };\n};","map":{"version":3,"names":["addZero","toTwelve","toTwentyFour","VIEW_BOX_SIZE","CIRCLE_RADIUS","HOURS_AMOUNT","ONE_HOUR_DEGREE","timeTextToNumber","timeText","isTwelfthMode","parsedTime","split","hours","minutes","parseInt","parseFloat","timeNumberToText","timeNumber","Math","floor","remainder","twentyFourText","getTimeByDegree","degree","time","getTimeCoordinates","radiusOffset","x","cos","PI","y","sin"],"sources":["/home/juanrodriguez/vue-time-ranges-picker/src/core/helpers.js"],"sourcesContent":["import addZero from 'add-zero';\nimport toTwelve from 'twentyfour-to-twelve';\nimport toTwentyFour from 'twelve-to-twentyfour';\n\nimport { VIEW_BOX_SIZE, CIRCLE_RADIUS, HOURS_AMOUNT, ONE_HOUR_DEGREE } from './consts';\n\nexport const timeTextToNumber = (timeText, isTwelfthMode) => {\n  let parsedTime = timeText;\n  if (isTwelfthMode) {\n    parsedTime = toTwentyFour(timeText);\n  }\n  const [hours, minutes] = parsedTime.split(':');\n  return parseInt(hours, 10) + parseFloat(minutes / 60, 10);\n};\n\nexport const timeNumberToText = (timeNumber, isTwelfthMode) => {\n  let hours = Math.floor(timeNumber);\n  const remainder = timeNumber - hours;\n  let minutes = remainder * 60;\n  const twentyFourText = addZero(hours) + ':' + addZero(minutes);\n  if (isTwelfthMode) {\n    return toTwelve(twentyFourText);\n  }\n  return twentyFourText;\n};\n\nexport const getTimeByDegree = degree => {\n  let time = (degree + 90) / ONE_HOUR_DEGREE;\n  if (time >= HOURS_AMOUNT) {\n    time = time - HOURS_AMOUNT;\n  }\n  return time;\n};\n\nexport const getTimeCoordinates = (time, radiusOffset = 0) => {\n  // minus 90 because time starts at top of circle\n  let degree = time * ONE_HOUR_DEGREE - 90;\n  if (degree <= 0) {\n    degree = 360 + degree;\n  }\n  const x =\n    VIEW_BOX_SIZE / 2 + (CIRCLE_RADIUS + radiusOffset) * Math.cos((degree * Math.PI) / 180);\n  const y =\n    VIEW_BOX_SIZE / 2 + (CIRCLE_RADIUS + radiusOffset) * Math.sin((degree * Math.PI) / 180);\n  return {\n    degree,\n    x,\n    y,\n  };\n};\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,YAAvC,EAAqDC,eAArD,QAA4E,UAA5E;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAWC,aAAX,EAA6B;EAC3D,IAAIC,UAAU,GAAGF,QAAjB;;EACA,IAAIC,aAAJ,EAAmB;IACjBC,UAAU,GAAGR,YAAY,CAACM,QAAD,CAAzB;EACD;;EACD,wBAAyBE,UAAU,CAACC,KAAX,CAAiB,GAAjB,CAAzB;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,OAAd;;EACA,OAAOC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAR,GAAsBG,UAAU,CAACF,OAAO,GAAG,EAAX,EAAe,EAAf,CAAvC;AACD,CAPM;AASP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAaR,aAAb,EAA+B;EAC7D,IAAIG,KAAK,GAAGM,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAZ;EACA,IAAMG,SAAS,GAAGH,UAAU,GAAGL,KAA/B;EACA,IAAIC,OAAO,GAAGO,SAAS,GAAG,EAA1B;EACA,IAAMC,cAAc,GAAGrB,OAAO,CAACY,KAAD,CAAP,GAAiB,GAAjB,GAAuBZ,OAAO,CAACa,OAAD,CAArD;;EACA,IAAIJ,aAAJ,EAAmB;IACjB,OAAOR,QAAQ,CAACoB,cAAD,CAAf;EACD;;EACD,OAAOA,cAAP;AACD,CATM;AAWP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,MAAM,EAAI;EACvC,IAAIC,IAAI,GAAG,CAACD,MAAM,GAAG,EAAV,IAAgBjB,eAA3B;;EACA,IAAIkB,IAAI,IAAInB,YAAZ,EAA0B;IACxBmB,IAAI,GAAGA,IAAI,GAAGnB,YAAd;EACD;;EACD,OAAOmB,IAAP;AACD,CANM;AAQP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAA4B;EAAA,IAArBE,YAAqB,uEAAN,CAAM;EAC5D;EACA,IAAIH,MAAM,GAAGC,IAAI,GAAGlB,eAAP,GAAyB,EAAtC;;EACA,IAAIiB,MAAM,IAAI,CAAd,EAAiB;IACfA,MAAM,GAAG,MAAMA,MAAf;EACD;;EACD,IAAMI,CAAC,GACLxB,aAAa,GAAG,CAAhB,GAAoB,CAACC,aAAa,GAAGsB,YAAjB,IAAiCR,IAAI,CAACU,GAAL,CAAUL,MAAM,GAAGL,IAAI,CAACW,EAAf,GAAqB,GAA9B,CADvD;EAEA,IAAMC,CAAC,GACL3B,aAAa,GAAG,CAAhB,GAAoB,CAACC,aAAa,GAAGsB,YAAjB,IAAiCR,IAAI,CAACa,GAAL,CAAUR,MAAM,GAAGL,IAAI,CAACW,EAAf,GAAqB,GAA9B,CADvD;EAEA,OAAO;IACLN,MAAM,EAANA,MADK;IAELI,CAAC,EAADA,CAFK;IAGLG,CAAC,EAADA;EAHK,CAAP;AAKD,CAfM"},"metadata":{},"sourceType":"module"}