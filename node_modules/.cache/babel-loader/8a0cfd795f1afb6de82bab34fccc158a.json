{"ast":null,"code":"import _objectSpread from \"/home/juanrodriguez/vue-time-ranges-picker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport { VIEW_BOX_SIZE, DEFAULT_VIEW_OPTIONS, STEP_OF_MOVING, EXTRA_POINTER_RADIUS } from '../core/consts';\nimport { timeTextToNumber, timeNumberToText } from '../core/helpers';\nimport RangesController from '../core/RangesController';\nimport RangesScales from './RangesScales/index.vue';\nimport HoursMarks from './HoursMarks/index.vue';\nimport QuartersTexts from './QuartersTexts/index.vue';\nimport ChosenTimePointers from './ChosenTimePointers/index.vue';\nexport default {\n  name: 'TimeRangesPicker',\n  components: {\n    RangesScales: RangesScales,\n    HoursMarks: HoursMarks,\n    QuartersTexts: QuartersTexts,\n    ChosenTimePointers: ChosenTimePointers\n  },\n  props: {\n    value: {\n      type: Array,\n      \"default\": function _default() {}\n    },\n    isTwelfthMode: {\n      type: Boolean,\n      \"default\": function _default() {\n        return false;\n      }\n    },\n    stepOfMoving: {\n      type: Number,\n      \"default\": function _default() {\n        return STEP_OF_MOVING;\n      }\n    },\n    extraPointerRadius: {\n      type: Number,\n      \"default\": function _default() {\n        return EXTRA_POINTER_RADIUS;\n      }\n    },\n    viewOptions: {\n      type: Object,\n      \"default\": function _default() {\n        return DEFAULT_VIEW_OPTIONS;\n      }\n    }\n  },\n  data: function data() {\n    var viewBoxSize = VIEW_BOX_SIZE;\n    return {\n      viewBoxSize: viewBoxSize,\n      innerValue: [],\n      rangesController: null,\n      ranges: [],\n      movePointers: []\n    };\n  },\n  computed: {\n    combinedViewOptions: function combinedViewOptions() {\n      return _objectSpread(_objectSpread({}, DEFAULT_VIEW_OPTIONS), this.viewOptions);\n    }\n  },\n  created: function created() {\n    this.getInfoFromValue(this.value);\n  },\n  watch: {\n    value: {\n      handler: function handler(newValue) {\n        this.getInfoFromValue(newValue);\n      }\n    },\n    stepOfMoving: function stepOfMoving(newValue) {\n      this.rangesController.setStepOfMoving(newValue);\n    }\n  },\n  methods: {\n    timeNumberToText: timeNumberToText,\n    getInfoFromValue: function getInfoFromValue(newValue) {\n      var _this = this;\n\n      var isTwelfthMode = this.isTwelfthMode,\n          stepOfMoving = this.stepOfMoving;\n      var innerValue = newValue.map(function (range) {\n        return _objectSpread(_objectSpread({}, range), {}, {\n          startTime: timeTextToNumber(range.startTime, isTwelfthMode),\n          endTime: timeTextToNumber(range.endTime, isTwelfthMode)\n        });\n      });\n      var rangesController = new RangesController(innerValue, stepOfMoving);\n      this.innerValue = innerValue;\n      this.rangesController = rangesController;\n      this.ranges = rangesController.ranges;\n      var newMovePointers = rangesController.movePointers;\n\n      if (this.movePointers && this.movePointers.length == newMovePointers.length) {\n        newMovePointers.map(function (newMovePointer) {\n          var oldMovePointer = _this.movePointers.find(function (movePointer) {\n            if (movePointer.name === newMovePointer.name) {\n              return true;\n            }\n          });\n\n          newMovePointer.setRef(oldMovePointer.ref);\n        });\n        return this.movePointers = newMovePointers;\n      }\n\n      this.movePointers = rangesController.movePointers;\n    },\n    handleStartMove: function handleStartMove(e) {\n      var activePointName = e.target.id;\n      var pointer = this.rangesController.getPointer(activePointName);\n\n      if (!pointer) {\n        pointer = this.tryToFindPointerNear(e);\n      }\n\n      if (!pointer) {\n        return;\n      }\n\n      var inputCenterElement = this.$refs['input-center'];\n\n      var _inputCenterElement$g = inputCenterElement.getBoundingClientRect(),\n          centerX = _inputCenterElement$g.x,\n          centerY = _inputCenterElement$g.y;\n\n      this.rangesController.setBasicVector([centerX, centerY]);\n      pointer.startMove();\n    },\n    handleMove: function handleMove(e) {\n      var activeMovePointers = this.rangesController.getActiveMovePointers();\n\n      if (!activeMovePointers.length) {\n        return;\n      }\n\n      var currentX = e.clientX;\n      var currentY = e.clientY;\n\n      for (var i = 0; i < activeMovePointers.length; i++) {\n        var pointer = activeMovePointers[i];\n        pointer.move(currentX, currentY);\n      }\n    },\n    handleEndMove: function handleEndMove() {\n      var activeMovePointers = this.rangesController.getActiveMovePointers();\n\n      if (!activeMovePointers.length) {\n        return;\n      }\n\n      this.rangesController.completeMove();\n      var ranges = this.rangesController.ranges;\n      var isTwelfthMode = this.isTwelfthMode;\n      var rangesData = ranges.map(function (range) {\n        return {\n          startTime: timeNumberToText(range.startMovePointer.time, isTwelfthMode),\n          endTime: timeNumberToText(range.endMovePointer.time, isTwelfthMode)\n        };\n      });\n      this.$emit('change', rangesData);\n    },\n    tryToFindPointerNear: function tryToFindPointerNear(e) {\n      var _this2 = this;\n\n      var clientX = e.clientX,\n          clientY = e.clientY;\n      var movePointers = this.movePointers;\n      var nearPointersData = movePointers.map(function (pointer) {\n        var ref = pointer.ref;\n        var rect = ref.getBoundingClientRect();\n        var pointerX = rect.x,\n            pointerY = rect.y;\n        return {\n          pointer: pointer,\n          distance: Math.abs(clientX - pointerX) + Math.abs(clientY - pointerY)\n        };\n      }).filter(function (_ref) {\n        var distance = _ref.distance;\n\n        if (distance < _this2.extraPointerRadius) {\n          return true;\n        }\n      });\n\n      if (!nearPointersData.length) {\n        return;\n      }\n\n      var nearestPointerData = nearPointersData.sort(function (a, b) {\n        return a.distance - b.distance;\n      })[0];\n      return nearestPointerData.pointer;\n    }\n  }\n};","map":{"version":3,"names":["VIEW_BOX_SIZE","DEFAULT_VIEW_OPTIONS","STEP_OF_MOVING","EXTRA_POINTER_RADIUS","timeTextToNumber","timeNumberToText","RangesController","RangesScales","HoursMarks","QuartersTexts","ChosenTimePointers","name","components","props","value","type","Array","isTwelfthMode","Boolean","stepOfMoving","Number","extraPointerRadius","viewOptions","Object","data","viewBoxSize","innerValue","rangesController","ranges","movePointers","computed","combinedViewOptions","created","getInfoFromValue","watch","handler","newValue","setStepOfMoving","methods","map","range","startTime","endTime","newMovePointers","length","newMovePointer","oldMovePointer","find","movePointer","setRef","ref","handleStartMove","e","activePointName","target","id","pointer","getPointer","tryToFindPointerNear","inputCenterElement","$refs","getBoundingClientRect","centerX","x","centerY","y","setBasicVector","startMove","handleMove","activeMovePointers","getActiveMovePointers","currentX","clientX","currentY","clientY","i","move","handleEndMove","completeMove","rangesData","startMovePointer","time","endMovePointer","$emit","nearPointersData","rect","pointerX","pointerY","distance","Math","abs","filter","nearestPointerData","sort","a","b"],"sources":["/home/juanrodriguez/vue-time-ranges-picker/src/TimeRangesPicker/index.js"],"sourcesContent":["import {\n  VIEW_BOX_SIZE,\n  DEFAULT_VIEW_OPTIONS,\n  STEP_OF_MOVING,\n  EXTRA_POINTER_RADIUS,\n} from '../core/consts';\nimport { timeTextToNumber, timeNumberToText } from '../core/helpers';\nimport RangesController from '../core/RangesController';\n\nimport RangesScales from './RangesScales/index.vue';\nimport HoursMarks from './HoursMarks/index.vue';\nimport QuartersTexts from './QuartersTexts/index.vue';\nimport ChosenTimePointers from './ChosenTimePointers/index.vue';\n\nexport default {\n  name: 'TimeRangesPicker',\n\n  components: {\n    RangesScales,\n    HoursMarks,\n    QuartersTexts,\n    ChosenTimePointers,\n  },\n\n  props: {\n    value: {\n      type: Array,\n      default: () => {},\n    },\n    isTwelfthMode: {\n      type: Boolean,\n      default: () => false,\n    },\n    stepOfMoving: {\n      type: Number,\n      default: () => STEP_OF_MOVING,\n    },\n    extraPointerRadius: {\n      type: Number,\n      default: () => EXTRA_POINTER_RADIUS,\n    },\n    viewOptions: {\n      type: Object,\n      default: () => DEFAULT_VIEW_OPTIONS,\n    },\n  },\n\n  data() {\n    const viewBoxSize = VIEW_BOX_SIZE;\n    return {\n      viewBoxSize,\n      innerValue: [],\n      rangesController: null,\n      ranges: [],\n      movePointers: [],\n    };\n  },\n\n  computed: {\n    combinedViewOptions() {\n      return {\n        ...DEFAULT_VIEW_OPTIONS,\n        ...this.viewOptions,\n      };\n    },\n  },\n\n  created() {\n    this.getInfoFromValue(this.value);\n  },\n\n  watch: {\n    value: {\n      handler(newValue) {\n        this.getInfoFromValue(newValue);\n      },\n    },\n    stepOfMoving(newValue) {\n      this.rangesController.setStepOfMoving(newValue);\n    },\n  },\n\n  methods: {\n    timeNumberToText,\n\n    getInfoFromValue(newValue) {\n      const { isTwelfthMode, stepOfMoving } = this;\n      const innerValue = newValue.map(range => {\n        return {\n          ...range,\n          startTime: timeTextToNumber(range.startTime, isTwelfthMode),\n          endTime: timeTextToNumber(range.endTime, isTwelfthMode),\n        };\n      });\n      const rangesController = new RangesController(innerValue, stepOfMoving);\n\n      this.innerValue = innerValue;\n      this.rangesController = rangesController;\n      this.ranges = rangesController.ranges;\n\n      const newMovePointers = rangesController.movePointers;\n      if (this.movePointers && this.movePointers.length == newMovePointers.length) {\n        newMovePointers.map(newMovePointer => {\n          const oldMovePointer = this.movePointers.find(movePointer => {\n            if (movePointer.name === newMovePointer.name) {\n              return true;\n            }\n          });\n          newMovePointer.setRef(oldMovePointer.ref);\n        });\n        return (this.movePointers = newMovePointers);\n      }\n\n      this.movePointers = rangesController.movePointers;\n    },\n\n    handleStartMove(e) {\n      const activePointName = e.target.id;\n      let pointer = this.rangesController.getPointer(activePointName);\n      if (!pointer) {\n        pointer = this.tryToFindPointerNear(e);\n      }\n      if (!pointer) {\n        return;\n      }\n      const inputCenterElement = this.$refs['input-center'];\n      const { x: centerX, y: centerY } = inputCenterElement.getBoundingClientRect();\n      this.rangesController.setBasicVector([centerX, centerY]);\n\n      pointer.startMove();\n    },\n\n    handleMove(e) {\n      const activeMovePointers = this.rangesController.getActiveMovePointers();\n      if (!activeMovePointers.length) {\n        return;\n      }\n      const currentX = e.clientX;\n      const currentY = e.clientY;\n      for (let i = 0; i < activeMovePointers.length; i++) {\n        const pointer = activeMovePointers[i];\n        pointer.move(currentX, currentY);\n      }\n    },\n\n    handleEndMove() {\n      const activeMovePointers = this.rangesController.getActiveMovePointers();\n      if (!activeMovePointers.length) {\n        return;\n      }\n      this.rangesController.completeMove();\n      const ranges = this.rangesController.ranges;\n      const { isTwelfthMode } = this;\n      const rangesData = ranges.map(range => {\n        return {\n          startTime: timeNumberToText(range.startMovePointer.time, isTwelfthMode),\n          endTime: timeNumberToText(range.endMovePointer.time, isTwelfthMode),\n        };\n      });\n      this.$emit('change', rangesData);\n    },\n\n    tryToFindPointerNear(e) {\n      const { clientX, clientY } = e;\n      const { movePointers } = this;\n      let nearPointersData = movePointers\n        .map(pointer => {\n          const { ref } = pointer;\n\n          const rect = ref.getBoundingClientRect();\n          const { x: pointerX, y: pointerY } = rect;\n          return {\n            pointer,\n            distance: Math.abs(clientX - pointerX) + Math.abs(clientY - pointerY),\n          };\n        })\n        .filter(({ distance }) => {\n          if (distance < this.extraPointerRadius) {\n            return true;\n          }\n        });\n\n      if (!nearPointersData.length) {\n        return;\n      }\n\n      let nearestPointerData = nearPointersData.sort((a, b) => {\n        return a.distance - b.distance;\n      })[0];\n\n      return nearestPointerData.pointer;\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}